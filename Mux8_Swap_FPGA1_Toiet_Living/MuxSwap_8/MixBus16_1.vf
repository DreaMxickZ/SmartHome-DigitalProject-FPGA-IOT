////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MixBus16_1.vf
// /___/   /\     Timestamp : 12/09/2022 22:37:58
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/XickZenF5/Desktop/Mux8_Swap/MuxSwap_8/MixBus16_1.vf -w C:/Users/XickZenF5/Desktop/Mux8_Swap/MuxSwap_8/MixBus16_1.sch
//Design Name: MixBus16_1
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MixBus16_1(BIT1, 
                  BIT2, 
                  BIT3, 
                  BIT4, 
                  BIT5, 
                  BIT6, 
                  BIT7, 
                  BIT8, 
                  BIT9, 
                  BIT10, 
                  BIT11, 
                  BIT12, 
                  BIT13, 
                  BIT14, 
                  BIT15, 
                  BIT16, 
                  BIT);

    input BIT1;
    input BIT2;
    input BIT3;
    input BIT4;
    input BIT5;
    input BIT6;
    input BIT7;
    input BIT8;
    input BIT9;
    input BIT10;
    input BIT11;
    input BIT12;
    input BIT13;
    input BIT14;
    input BIT15;
    input BIT16;
   output [15:0] BIT;
   
   wire XLXN_13;
   wire XLXN_15;
   wire XLXN_17;
   wire XLXN_19;
   wire XLXN_23;
   wire XLXN_25;
   wire XLXN_27;
   wire XLXN_29;
   wire XLXN_31;
   wire XLXN_33;
   wire XLXN_35;
   wire XLXN_37;
   wire XLXN_39;
   wire XLXN_41;
   wire XLXN_43;
   wire XLXN_45;
   
   INV  XLXI_1 (.I(BIT1), 
               .O(XLXN_13));
   INV  XLXI_2 (.I(XLXN_13), 
               .O(BIT[0]));
   INV  XLXI_3 (.I(BIT2), 
               .O(XLXN_15));
   INV  XLXI_4 (.I(XLXN_15), 
               .O(BIT[1]));
   INV  XLXI_5 (.I(BIT3), 
               .O(XLXN_17));
   INV  XLXI_6 (.I(XLXN_17), 
               .O(BIT[2]));
   INV  XLXI_7 (.I(BIT4), 
               .O(XLXN_19));
   INV  XLXI_8 (.I(XLXN_19), 
               .O(BIT[3]));
   INV  XLXI_11 (.I(BIT5), 
                .O(XLXN_23));
   INV  XLXI_12 (.I(XLXN_23), 
                .O(BIT[4]));
   INV  XLXI_13 (.I(BIT6), 
                .O(XLXN_25));
   INV  XLXI_14 (.I(XLXN_25), 
                .O(BIT[5]));
   INV  XLXI_15 (.I(BIT7), 
                .O(XLXN_27));
   INV  XLXI_16 (.I(XLXN_27), 
                .O(BIT[6]));
   INV  XLXI_17 (.I(BIT8), 
                .O(XLXN_29));
   INV  XLXI_18 (.I(XLXN_29), 
                .O(BIT[7]));
   INV  XLXI_19 (.I(BIT9), 
                .O(XLXN_31));
   INV  XLXI_20 (.I(XLXN_31), 
                .O(BIT[8]));
   INV  XLXI_21 (.I(BIT10), 
                .O(XLXN_33));
   INV  XLXI_22 (.I(XLXN_33), 
                .O(BIT[9]));
   INV  XLXI_23 (.I(BIT11), 
                .O(XLXN_35));
   INV  XLXI_24 (.I(XLXN_35), 
                .O(BIT[10]));
   INV  XLXI_25 (.I(BIT12), 
                .O(XLXN_37));
   INV  XLXI_26 (.I(XLXN_37), 
                .O(BIT[11]));
   INV  XLXI_27 (.I(BIT13), 
                .O(XLXN_39));
   INV  XLXI_28 (.I(XLXN_39), 
                .O(BIT[12]));
   INV  XLXI_29 (.I(BIT14), 
                .O(XLXN_41));
   INV  XLXI_30 (.I(XLXN_41), 
                .O(BIT[13]));
   INV  XLXI_31 (.I(BIT15), 
                .O(XLXN_43));
   INV  XLXI_32 (.I(XLXN_43), 
                .O(BIT[14]));
   INV  XLXI_33 (.I(BIT16), 
                .O(XLXN_45));
   INV  XLXI_34 (.I(XLXN_45), 
                .O(BIT[15]));
endmodule
