////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Mux4_Swap_LED.vf
// /___/   /\     Timestamp : 12/10/2022 02:15:11
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog C:/Users/XickZenF5/Desktop/Naringka_setdaad/NaRingkaSetClock/Mux4_Swap_LED.vf -w C:/Users/XickZenF5/Desktop/Naringka_setdaad/NaRingkaSetClock/Mux4_Swap_LED.sch
//Design Name: Mux4_Swap_LED
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module M4_1E_HXILINX_Mux4_Swap_LED (O, D0, D1, D2, D3, E, S0, S1);
    

   output O;

   input  D0;
   input  D1;
   input  D2;
   input  D3;
   input  E;
   input  S0;
   input  S1;

   reg O;

   always @ ( D0 or D1 or D2 or D3 or E or S0 or S1)
   begin
      if(!E)
      O <= 1'b0;
      else 
      begin
        case({S1,S0})
        2'b00 : O <= D0;
        2'b01 : O <= D1;
        2'b10 : O <= D2;
        2'b11 : O <= D3;
        endcase
      end
   end
    
endmodule
`timescale 100 ps / 10 ps

module FJKC_HXILINX_Mux4_Swap_LED(Q, C, CLR, J, K);
   
   output             Q;

   input 	      C;	
   input 	      CLR;	
   input              J;
   input              K;
   
   parameter INIT = 1'b0;
   reg                Q = INIT;


   always @(posedge C or posedge CLR)
     begin
	if (CLR)
	  Q <= 1'b0;
	else
        begin
           if(!J)
           begin
              if(K)
              Q <= 1'b0;
           end
           else
           begin
              if(!K)
              Q <= 1'b1;
              else 
              Q <= !Q;
           end
        end
     end
   
endmodule
`timescale 1ns / 1ps

module counter03_MUSER_Mux4_Swap_LED(CLK_IN, 
                                     CLR_IN, 
                                     BIT);

    input CLK_IN;
    input CLR_IN;
   output [1:0] BIT;
   
   wire XLXN_1;
   wire XLXN_6;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_15;
   wire XLXN_16;
   wire [1:0] BIT_DUMMY;
   
   assign BIT[1:0] = BIT_DUMMY[1:0];
   (* HU_SET = "XLXI_1_36" *) 
   FJKC_HXILINX_Mux4_Swap_LED  XLXI_1 (.C(XLXN_10), 
                                      .CLR(XLXN_11), 
                                      .J(XLXN_1), 
                                      .K(XLXN_1), 
                                      .Q(BIT_DUMMY[0]));
   (* HU_SET = "XLXI_2_37" *) 
   FJKC_HXILINX_Mux4_Swap_LED  XLXI_2 (.C(XLXN_10), 
                                      .CLR(XLXN_11), 
                                      .J(BIT_DUMMY[0]), 
                                      .K(BIT_DUMMY[0]), 
                                      .Q(BIT_DUMMY[1]));
   (* HU_SET = "XLXI_3_38" *) 
   FJKC_HXILINX_Mux4_Swap_LED  XLXI_3 (.C(XLXN_10), 
                                      .CLR(XLXN_11), 
                                      .J(XLXN_6), 
                                      .K(XLXN_6), 
                                      .Q(XLXN_15));
   VCC  XLXI_4 (.P(XLXN_1));
   AND2  XLXI_5 (.I0(BIT_DUMMY[1]), 
                .I1(BIT_DUMMY[0]), 
                .O(XLXN_6));
   AND2  XLXI_6 (.I0(CLK_IN), 
                .I1(XLXN_16), 
                .O(XLXN_10));
   OR2  XLXI_7 (.I0(XLXN_15), 
               .I1(CLR_IN), 
               .O(XLXN_11));
   VCC  XLXI_8 (.P(XLXN_16));
endmodule
`timescale 1ns / 1ps

module Mux4_Swap_LED(BIT_0_3, 
                     BIT_4_7, 
                     BIT_8_11, 
                     BIT_12_15, 
                     CLK_LED, 
                     CLR_clk_Mux, 
                     BIT_A_LSB, 
                     BIT_B, 
                     BIT_C, 
                     BIT_D_MSB, 
                     XLXN_71);

    input [3:0] BIT_0_3;
    input [3:0] BIT_4_7;
    input [3:0] BIT_8_11;
    input [3:0] BIT_12_15;
    input CLK_LED;
    input CLR_clk_Mux;
   output BIT_A_LSB;
   output BIT_B;
   output BIT_C;
   output BIT_D_MSB;
   output [1:0] XLXN_71;
   
   wire XLXN_12;
   wire [1:0] XLXN_71_DUMMY;
   
   assign XLXN_71[1:0] = XLXN_71_DUMMY[1:0];
   (* HU_SET = "XLXI_1_39" *) 
   M4_1E_HXILINX_Mux4_Swap_LED  XLXI_1 (.D0(BIT_0_3[0]), 
                                       .D1(BIT_4_7[0]), 
                                       .D2(BIT_8_11[0]), 
                                       .D3(BIT_12_15[0]), 
                                       .E(XLXN_12), 
                                       .S0(XLXN_71_DUMMY[0]), 
                                       .S1(XLXN_71_DUMMY[1]), 
                                       .O(BIT_A_LSB));
   (* HU_SET = "XLXI_2_40" *) 
   M4_1E_HXILINX_Mux4_Swap_LED  XLXI_2 (.D0(BIT_0_3[1]), 
                                       .D1(BIT_4_7[1]), 
                                       .D2(BIT_8_11[1]), 
                                       .D3(BIT_12_15[1]), 
                                       .E(XLXN_12), 
                                       .S0(XLXN_71_DUMMY[0]), 
                                       .S1(XLXN_71_DUMMY[1]), 
                                       .O(BIT_B));
   (* HU_SET = "XLXI_3_41" *) 
   M4_1E_HXILINX_Mux4_Swap_LED  XLXI_3 (.D0(BIT_0_3[2]), 
                                       .D1(BIT_4_7[2]), 
                                       .D2(BIT_8_11[2]), 
                                       .D3(BIT_12_15[2]), 
                                       .E(XLXN_12), 
                                       .S0(XLXN_71_DUMMY[0]), 
                                       .S1(XLXN_71_DUMMY[1]), 
                                       .O(BIT_C));
   (* HU_SET = "XLXI_4_42" *) 
   M4_1E_HXILINX_Mux4_Swap_LED  XLXI_4 (.D0(BIT_0_3[3]), 
                                       .D1(BIT_4_7[3]), 
                                       .D2(BIT_8_11[3]), 
                                       .D3(BIT_12_15[3]), 
                                       .E(XLXN_12), 
                                       .S0(XLXN_71_DUMMY[0]), 
                                       .S1(XLXN_71_DUMMY[1]), 
                                       .O(BIT_D_MSB));
   counter03_MUSER_Mux4_Swap_LED  XLXI_9 (.CLK_IN(CLK_LED), 
                                         .CLR_IN(CLR_clk_Mux), 
                                         .BIT(XLXN_71_DUMMY[1:0]));
   VCC  XLXI_10 (.P(XLXN_12));
endmodule
